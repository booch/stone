---

require:
  - rubocop-rspec
  - rubocop-performance

inherit_from:
  - https://raw.githubusercontent.com/booch/config_files/master/ruby/rubocop.yml

# Ignore some files. NOTE: Exclude does not add to any existing Exclude directives.
AllCops:
  Exclude:
    - 'church*.rb'
    - 'vendor/**/*'

# Allow longer lines.
Layout/LineLength:
  Max: 160

# Use `{}` for blocks that return a value; otherwise use `do` and `end`.
# We make a few exceptions, mostly for RSpec. And for grammar and transform rules.
Style/BlockDelimiters:
  EnforcedStyle: semantic
  FunctionalMethods:
    - expect
  IgnoredMethods:
    - rule
    - rule!
    - let
    - let!
    - subject

# Allow non-ASCII identifiers.
Naming/AsciiIdentifiers:
  Enabled: false

# Some of our classes are going to be long.
Metrics/ClassLength:
  Max: 250

# Sometimes we need to pass a block down recursively, so allow expressing that.
Performance/RedundantBlockCall:
  Enabled: false

# Not sure why `∧` and `∨` are problematic, even after allowing non-ASCII identifiers.
# Also allow `builtin_ClassName` methods.
Naming/MethodName:
  Exclude:
  - src/extensions/boolean.rb
  - src/stone/top.rb

# I don't believe `module_function` should be outdented like `private`, but there's no way to turn it off for just `module_function`.
Layout/AccessModifierIndentation:
  EnforcedStyle: outdent
  Exclude:
    - src/stone/top.rb

# Allow `expr = expr + x` in this particular file, to parallel `expr = x + expr` that's right next to it.
Style/SelfAssignment:
  Exclude:
    - src/stone/ast/binary_operation.rb

# The `grammar` and `transforms` methods are DSLs; don't worry about their size/complexity.
Metrics/AbcSize:
  IgnoredMethods:
    - grammar
    - transforms
Metrics/MethodLength:
  IgnoredMethods:
    - grammar
    - transforms
Metrics/PerceivedComplexity:
  IgnoredMethods:
    - grammar
    - transforms
Metrics/CyclomaticComplexity:
  IgnoredMethods:
    - grammar
    - transforms

# These seem to be broken; I *have* empty lines around all my class/module/method/block bodies.
Layout/EmptyLinesAroundClassBody:
  Enabled: false
Layout/EmptyLinesAroundModuleBody:
  Enabled: false
Layout/EmptyLineBetweenDefs:
  Enabled: false
Layout/EmptyLinesAroundBlockBody:
  Enabled: false


# Allow `nil` to be the only thing inside a lambda block.
Style/NilLambda: # (new in 1.3)
  Enabled: false

# Allow `chars.last(count)` and `chars.drop(count)` on String.
Performance/RedundantStringChars: # (new in 1.7)
  Enabled: false

# Allow passing a method object as a block (using `&` and `method`).
Performance/MethodObjectAsBlock: # (new in 1.9)
  Enabled: false


## New cops added to RuboCop are "pending"; they'll be enabled in the next major version.

Lint/UnmodifiedReduceAccumulator: # (new in 1.1)
  Enabled: true
Lint/DuplicateRegexpCharacterClassElement: # (new in 1.1)
  Enabled: true
Lint/EmptyBlock: # (new in 1.1)
  Enabled: true
Lint/ToEnumArguments: # (new in 1.1)
  Enabled: true
Style/ArgumentsForwarding: # (new in 1.1)
  Enabled: true
Style/DocumentDynamicEvalDefinition: # (new in 1.1)
  Enabled: true
Style/SwapValues: # (new in 1.1)
  Enabled: true

Lint/NoReturnInBeginEndBlocks: # (new in 1.2)
  Enabled: true
Style/CollectionCompact: # (new in 1.2)
  Enabled: true
Style/NegatedIfElseCondition: # (new in 1.2)
  Enabled: true

Lint/DuplicateBranch: # (new in 1.3)
  Enabled: true
Lint/EmptyClass: # (new in 1.3)
  Enabled: true
  AllowComments: true

Style/RedundantArgument: # (new in 1.4)
  Enabled: true

Lint/UnexpectedBlockArity: # (new in 1.5)
  Enabled: true

Layout/SpaceBeforeBrackets: # (new in 1.7)
  Enabled: true
Lint/AmbiguousAssignment: # (new in 1.7)
  Enabled: true
Style/HashExcept: # (new in 1.7)
  Enabled: true
Performance/AncestorsInclude: # (new in 1.7)
  Enabled: true
Performance/BigDecimalWithNumericArgument: # (new in 1.7)
  Enabled: true
Performance/RedundantSortBlock: # (new in 1.7)
  Enabled: true
Performance/ReverseFirst: # (new in 1.7)
  Enabled: true
Performance/SortReverse: # (new in 1.7)
  Enabled: true
Performance/Squeeze: # (new in 1.7)
  Enabled: true
Performance/StringInclude: # (new in 1.7)
  Enabled: true

Lint/DeprecatedConstants: # (new in 1.8)
  Enabled: true
Lint/LambdaWithoutLiteralBlock: # (new in 1.8)
  Enabled: true
Lint/RedundantDirGlobSort: # (new in 1.8)
  Enabled: true
Style/EndlessMethod: # (new in 1.8)
  Enabled: true
Performance/CollectionLiteralInLoop: # (new in 1.8)
  Enabled: true
Performance/Sum: # (new in 1.8)
  Enabled: true

Performance/BlockGivenWithExplicitBlock: # (new in 1.9)
  Enabled: true
Performance/ConstantRegexp: # (new in 1.9)
  Enabled: true


Lint/NumberedParameterAssignment: # (new in 1.9)
  Enabled: true
Lint/OrAssignmentToConstant: # (new in 1.9)
  Enabled: true
Lint/SymbolConversion: # (new in 1.9)
  Enabled: true
Lint/TripleQuotes: # (new in 1.9)
  Enabled: true
Style/IfWithBooleanLiteralBranches: # (new in 1.9)
  Enabled: true

Gemspec/DateAssignment: # (new in 1.10)
  Enabled: true
Style/HashConversion: # (new in 1.10)
  Enabled: true
Performance/RedundantEqualityComparisonBlock: # (new in 1.10)
  Enabled: true
Performance/RedundantSplitRegexpArgument: # (new in 1.10)
  Enabled: true

Performance/MapCompact: # (new in 1.11)
  Enabled: true

Style/StringChars: # (new in 1.12)
  Enabled: true
