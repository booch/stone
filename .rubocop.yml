---

require:
  - rubocop-rspec
  - rubocop-performance

inherit_from:
  - https://raw.githubusercontent.com/booch/config_files/master/ruby/rubocop.yml

# Ignore some files. NOTE: Exclude does not add to any existing Exclude directives.
AllCops:
  Exclude:
    - 'church*.rb'
    - 'vendor/**/*'

# Allow longer lines.
Metrics/LineLength:
  Max: 160

# Use `{}` for blocks that return a value; otherwise use `do` and `end`.
# We make a few exceptions, mostly for RSpec. And for grammar and transform rules.
Style/BlockDelimiters:
  EnforcedStyle: semantic
  FunctionalMethods:
    - expect
  IgnoredMethods:
    - rule
    - rule!
    - let
    - let!
    - subject

# Allow non-ASCII identifiers.
Naming/AsciiIdentifiers:
  Enabled: false

# Some of our classes are going to be long.
Metrics/ClassLength:
  Max: 250

# Sometimes we need to pass a block down recursively, so allow expressing that.
Performance/RedundantBlockCall:
  Enabled: false

# Not sure why `∧` and `∨` are problematic, even after allowing non-ASCII identifiers.
# Also allow `builtin_ClassName` methods.
Naming/MethodName:
  Exclude:
  - src/extensions/boolean.rb
  - src/stone/top.rb

# I don't believe `module_function` should be outdented like `private`, but there's no way to turn it off for just `module_function`.
Layout/AccessModifierIndentation:
  EnforcedStyle: outdent
  Exclude:
    - src/stone/top.rb

# Allow `expr = expr + x` in this particular file, to parallel `expr = x + expr` that's right next to it.
Style/SelfAssignment:
  Exclude:
    - src/stone/ast/binary_operation.rb

# The `grammar` and `transforms` methods are DSLs; don't worry about their size/complexity.
Metrics/AbcSize:
  IgnoredMethods:
    - grammar
    - transforms
Metrics/MethodLength:
  IgnoredMethods:
    - grammar
    - transforms
Metrics/PerceivedComplexity:
  IgnoredMethods:
    - grammar
    - transforms
Metrics/CyclomaticComplexity:
  IgnoredMethods:
    - grammar
    - transforms

# These seem to be broken; I *have* empty lines around all my class/module/method/block bodies.
Layout/EmptyLinesAroundClassBody:
  Enabled: false
Layout/EmptyLinesAroundModuleBody:
  Enabled: false
Layout/EmptyLineBetweenDefs:
  Enabled: false
Layout/EmptyLinesAroundBlockBody:
  Enabled: false
